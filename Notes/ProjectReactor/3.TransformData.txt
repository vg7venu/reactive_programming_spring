When you want to apply some transformations like uppercase,lowercase,.. to the data you get from
publisher, you use this transform data you can apply these transformations

map():
    used to transform the element from one form to another in a Reactive stream

filter():
    used to filter the stream

flatMap():
    Transforms one source elements to a flux of 1 to N elements
    ex: "AKIL" to Flux.just("A","K","I","L")
    use when the transformation returns a reactive type flux or mono
    flatmap always returns Flux<Type>
    dont use flapmap when you need are constraint to order

Comparison
map() - 1 to 1 Transformation
flapmap() - 1 to N Transformations
map() - Does the simple transformations from T to V
flatmap() - Does more than just transformations. subscribes to flux or mono thats part of the transformation
            and then flattens it and sends it downstream
map() - synchronous transformations
flatmap() - asynchronous transformations
map() - doesnt support transformations that returns the publisher
flatmap() - it returns the publisher/ reactive types

